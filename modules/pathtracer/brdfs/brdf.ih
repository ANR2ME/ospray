/********************************************************************* *\
 * INTEL CORPORATION PROPRIETARY INFORMATION                            
 * This software is supplied under the terms of a license agreement or  
 * nondisclosure agreement with Intel Corporation and may not be copied 
 * or disclosed except in accordance with the terms of that agreement.  
 * Copyright (C) 2014 Intel Corporation. All Rights Reserved.           
 ********************************************************************* */

#pragma once

#include "optics.ih"
#include "ospray/common/dg.ih"

#define SPECULAR_REFLECTION   (1<<0)  /*!< diffuse light reflection            */
#define DIFFUSE_REFLECTION    (1<<1)  /*!< glossy light reflection             */
#define GLOSSY_REFLECTION     (1<<2)  /*!< perfect specular light reflection   */
#define DIFFUSE_TRANSMISSION  (1<<3)  /*!< diffuse light transmission          */
#define GLOSSY_TRANSMISSION   (1<<4)  /*!< glossy light transmission           */
#define SPECULAR_TRANSMISSION (1<<5)  /*!< perfect specular light transmission */

/*! diffuse reflections and transmissions          */
#define DIFFUSE      (DIFFUSE_REFLECTION   | DIFFUSE_TRANSMISSION) 

/*! glossy reflections and transmissions           */
#define GLOSSY       (GLOSSY_REFLECTION    | GLOSSY_TRANSMISSION) 

/*! perfect specular reflections and transmissions */
#define SPECULAR     (SPECULAR_REFLECTION  | SPECULAR_TRANSMISSION) 

/*!< all possible reflections   */
#define REFLECTION   (DIFFUSE_REFLECTION   | GLOSSY_REFLECTION   | SPECULAR_REFLECTION) 

/*!< all possible transmissions */
#define TRANSMISSION (DIFFUSE_TRANSMISSION | GLOSSY_TRANSMISSION|SPECULAR_TRANSMISSION)

/*!< no component set   */
#define NONE         0

/*!< all components set */
#define ALL          (REFLECTION | TRANSMISSION)

struct BRDF;

typedef uint32 BRDFType;

typedef vec3f (*BRDF__EvalFunc)(const uniform BRDF* uniform this, 
                                const vec3f &wo, const DifferentialGeometry &dg, const vec3f &wi);

typedef vec3f (*BRDF__SampleFunc)(const uniform BRDF* uniform this,
                                  const vec3f &wo, const DifferentialGeometry &dg, Sample3f &wi, const vec2f &s);

struct BRDF 
{
  uint32 brdfType;
  BRDF__EvalFunc eval;
  BRDF__SampleFunc sample;
};

inline void BRDF__Constructor(uniform BRDF* uniform this,
                              const uniform uint32 brdfType,
                              const uniform BRDF__EvalFunc eval_,
                              const uniform BRDF__SampleFunc sample_)
{
  this->brdfType = brdfType;
  this->eval = eval_;
  this->sample = sample_;
}
