#pragma once

#define LOG(x)

#ifndef NULL
#define NULL 0
#endif

#include "ospray/math/vec.ih"
#include "ospray/math/affine.ih"
#include "ospray/common/Ray.ih"

/* vertex and triangle layout */
struct RTCVertex   { uniform float x,y,z,a; };
struct RTCTriangle { uniform int v0, v1, v2; };

// #if defined(__MIC__)
// inline void* uniform align_ptr(void* uniform ptr) {
//   return (void* uniform) ((((uniform int64)ptr) + 63) & (-64));
// }
// #elif defined(__AVX__)
// inline void* uniform align_ptr(void* uniform ptr) {
//   return (void* uniform) ((((uniform int64)ptr) + 31) & (-32));
// }
// #else
// inline void* uniform align_ptr(void* uniform ptr) {
//   return (void* uniform) ((((uniform int64)ptr) + 15) & (-16));
// }
// #endif


#define inf     floatbits(0x7F800000)
#define pos_inf floatbits(0x7F800000)
#define neg_inf floatbits(0xFF800000)

#define M_PI     3.14159265358979323846f
#define pi       3.14159265358979323846f
#define two_pi   6.283185307179586232f
#define four_pi 12.566370614359172464f

#define one_over_pi      0.31830988618379069122f
#define one_over_two_pi  0.15915494309189534561f
#define one_over_four_pi 0.079577471545947672804f

