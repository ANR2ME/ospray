/********************************************************************* *\
 * INTEL CORPORATION PROPRIETARY INFORMATION                            
 * This software is supplied under the terms of a license agreement or  
 * nondisclosure agreement with Intel Corporation and may not be copied 
 * or disclosed except in accordance with the terms of that agreement.  
 * Copyright (C) 2014 Intel Corporation. All Rights Reserved.           
 ********************************************************************* */

#ifndef OSPRAY_CAMERA_IH
#define OSPRAY_CAMERA_IH 1

#include "../common/ray.ih"


/*! \file camera.ih Defines the abstract base class of an ISPC-side camera */

struct Camera;

/*! input parameters to a 'initRay' method. Specifield the time,
    pixel, and lens samples the camera is to generate a ray for */
struct CameraSample {
  vec2f screen; /*! screen sample, from [(0,0)-frameSize] */
  vec2f lens;   /*!< may be left un-initialized if 'camera.doesDOF' is false */
  float time;   /*!< time */
};

/*! \brief Fct pointer type for 'virtual' method that sets a pixel */
typedef void (*Camera_initRay)(uniform Camera  *uniform,
                               varying Ray &ray,
                               const varying CameraSample &sample);


struct Camera
{
  Camera_initRay initRay;
  bool doesDOF; /*!< indicates whether this camera does depth-of-field
                    (DOF). If so, the 'CameraSample' passed to initRay
                    has to have properly initialized 'lens' value; if
                    not, this value can remain unused. */
  void *cppEquivalent; /*!< pointer back to c++-side of this class */
};

#endif
