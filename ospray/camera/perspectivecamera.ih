#ifndef OSPRAY_PERSPECTIVE_CAMERA_IH
#define OSPRAY_PERSPECTIVE_CAMERA_IH 1

#include "../common/ray.ih"


/*! \file framebuffer.isph Defines the abstract base class of an ISPC frame buffer */

struct Camera;

/*! \brief Fct pointer type for 'virtual' method that sets a pixel */
typedef void (*InitRayMethod)(uniform Camera  *uniform,
                              varying Ray &ray,
                              const varying vec2f &sample);

struct Camera
{
  InitRayMethod initRay;
  void *cClassPtr; /*!< pointer back to c++-side of this class */
};

// ! contains all precomputed data for a perspectice camera to generate a ray with 
/*! \internal The main reason we have this data outside the main
    'PerspectiveCamera' class is that we can actually tell ispc to
    'export' this data-only class, whereas ISPC cannot export the main
    PerspectiveCamera class itself (because of some issues with
    exporting function pointers with varying paramters) */
struct PerspectiveCamera_Data
{
  vec3f org;
  vec3f dir_00;
  vec3f dir_du;
  vec3f dir_dv;
};

struct PerspectiveCamera {
  Camera inherited;
  PerspectiveCamera_Data data;
};

#endif
