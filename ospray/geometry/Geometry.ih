// ======================================================================== //
// Copyright 2009-2015 Intel Corporation                                    //
//                                                                          //
// Licensed under the Apache License, Version 2.0 (the "License");          //
// you may not use this file except in compliance with the License.         //
// You may obtain a copy of the License at                                  //
//                                                                          //
//     http://www.apache.org/licenses/LICENSE-2.0                           //
//                                                                          //
// Unless required by applicable law or agreed to in writing, software      //
// distributed under the License is distributed on an "AS IS" BASIS,        //
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. //
// See the License for the specific language governing permissions and      //
// limitations under the License.                                           //
// ======================================================================== //

#pragma once

#include "ospray/common/Material.ih"
#include "ospray/common/Ray.ih"
#include "ospray/common/DifferentialGeometry.ih"

typedef void (*Geometry_postIntersectFct)(uniform Geometry *uniform THIS,
                                          uniform Model *uniform model,
                                          varying DifferentialGeometry &dg,
                                          const varying Ray &ray,
                                          uniform int64 flags);

/*! ispc-side equivalent of a geometry */
struct Geometry {
  void *uniform cppEquivalent; //! pointer back to the C++-equivalent of this class
  uniform Material *uniform material;//!< material attached to this geometry
  uniform Model    *uniform model;   //!< model that this geometry is part of
  uniform int32             geomID;  //!< ID that 'model' knows this geometry under
  Geometry_postIntersectFct postIntersect; /*! postintersect function
                                               that fills in a
                                               differentialgeometry
                                               struct */
};
 
//! constructor for ispc-side Geometry object
extern void Geometry_Constructor(uniform Geometry *uniform geometry,
                                 void *uniform cppEquivalent,
                                 uniform Geometry_postIntersectFct postIntersect,
                                 uniform Model *uniform model,
                                 uniform int32  geomID,
                                 uniform Material *uniform material);
//! destructor for ispc-side Geometry object
extern void Geometry_Destructor(uniform Geometry *uniform mesh);

