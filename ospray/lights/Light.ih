/********************************************************************* *\
 * INTEL CORPORATION PROPRIETARY INFORMATION                            
 * This software is supplied under the terms of a license agreement or  
 * nondisclosure agreement with Intel Corporation and may not be copied 
 * or disclosed except in accordance with the terms of that agreement.  
 * Copyright (C) 2014 Intel Corporation. All Rights Reserved.           
 ********************************************************************* */

#ifndef OSPRAY_LIGHT_IH
#define OSPRAY_LIGHT_IH

#include "ospray/math/vec.ih"

/*! ispc-side equivalent of a light */

struct Light {

  //! Pointer back to the C++ equivalent of this class.
  void *uniform cppEquivalent;

  //! Compute the radiance at a point from a sample on the light sans occluders, return the extant light vector and distance.
  varying vec3f (*computeRadiance)(void *uniform light, const varying vec3f &coordinates, varying vec3f &direction, varying float &distance);

};

//! constructor for ispc-side light object
extern void Light_Constructor(uniform Light *uniform light,
                              void *uniform cppEquivalent);

//! destructor for ispc-side light object
extern void Light_Destructor(uniform Light *uniform light);

#endif
