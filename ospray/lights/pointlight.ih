/********************************************************************* *\
 * INTEL CORPORATION PROPRIETARY INFORMATION                            
 * This software is supplied under the terms of a license agreement or  
 * nondisclosure agreement with Intel Corporation and may not be copied 
 * or disclosed except in accordance with the terms of that agreement.  
 * Copyright (C) 2014 Intel Corporation. All Rights Reserved.           
 ********************************************************************* */

#ifndef OSPRAY_POINT_LIGHT_IH
#define OSPRAY_POINT_LIGHT_IH

#include "light.ih"
#include "ospray/math/vec.ih"

struct PointLight {
  uniform Light base;     //!< inherited light fields

  uniform vec3f position; //!< light position
  uniform vec3f color;    //!< light color

  uniform float range;  //!< max range at which the light will have an effect
};

//! Compute the radiance at a point from a sample on the light sans occluders, return the extant light vector and distance.
varying vec3f PointLight_computeRadiance(void *uniform light, const varying vec3f &coordinates, varying vec3f &direction, varying float &distance);

//! Construct a new ispc-side PointLight object
extern void PointLight_Constructor( uniform PointLight *uniform THIS,
                                    void *uniform cppEquivalent,
                                    const uniform vec3f &position,
                                    const uniform vec3f &color,
                                    const uniform float range);

//! Destroy an ispc-side PointLight object
extern void PointLight_Destructor(uniform PointLight *uniform THIS);

#endif
