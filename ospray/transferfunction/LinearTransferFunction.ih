/********************************************************************* *\
 * INTEL CORPORATION PROPRIETARY INFORMATION                            
 * This software is supplied under the terms of a license agreement or  
 * nondisclosure agreement with Intel Corporation and may not be copied 
 * or disclosed except in accordance with the terms of that agreement.  
 * Copyright (C) 2014 Intel Corporation. All Rights Reserved.           
 ********************************************************************* */

#pragma once

#include "ospray/transferfunction/TransferFunction.ih"

#define PRECOMPUTED_VALUES_DIM 16

struct LinearTransferFunction {

  //! Pointers to functions common to all TransferFunction subtypes
  //! (must be the first field of the struct).
  TransferFunction inherited;

  //! Transfer function alpha values, count, and range.
  float *uniform alphas;  
  uniform int alphaCount;  
  uniform vec2f alphaRange;

  //! Transfer function colors, count, and range.
  vec3f *uniform colors;  
  uniform int colorCount;  
  uniform vec2f colorRange;

  //! A 2D array that contains precomputed minimum and maximum values
  //! for a transfer function.
  vec2f precomputedMinMaxInRange[PRECOMPUTED_VALUES_DIM][PRECOMPUTED_VALUES_DIM];

};

//! Interpolated opacity for the given value.
varying float LinearTransferFunction_getAlphaForValue(const void *uniform transferFunction,
                                                      varying float value);

//! Interpolated color for the given value.
varying vec3f LinearTransferFunction_getColorForValue(const void *uniform transferFunction,
                                                      varying float value);

//! Precompute the min/max alpha ranges for this transfer function
void LinearTransferFunction_precomputeMinMaxAlphaRanges(void *uniform pointer);

//! Look up the precomputed min/max alpha values for a given range
uniform vec2f LinearTransferFunction_getMinMaxAlphaInRange(void *uniform pointer, 
                                                           uniform float lowRange, 
                                                           uniform float highRange);

