//
//                 INTEL CORPORATION PROPRIETARY INFORMATION
//
//    This software is supplied under the terms of a license agreement or
//    nondisclosure agreement with Intel Corporation and may not be copied
//    or disclosed except in accordance with the terms of that agreement.
//    Copyright (C) 2014 Intel Corporation. All Rights Reserved.
//

#ifndef VOLUME_IH
#define VOLUME_IH

#include "ospray/common/OspCommon.ih"
#include "ospray/transferfunction/TransferFunction.ih"

    //! \brief Variables and methods common to all subtypes of the Volume
    //!  class, an abstraction for the concrete object which performs the
    //!  volume sampling (this struct must be the first field of a struct
    //!  representing a "derived" class to allow casting to that class).
    //!
    struct Volume {

        //! Gamma correction coefficient and exponent.
        uniform vec2f gammaCorrection;

        //! Step size for ray casting based renderers.
        uniform float stepSize;

        //! Color and opacity transfer function.
        TransferFunction *uniform transferFunction;

        //! The largest floating point value still inside the volume.
        uniform vec3f upperBound;

        //! The range of values contained in the volume.
        uniform vec2f valueRange;

        //! The gradient at the given sample location in the volume.
        varying vec3f (*uniform computeGradient)(void *uniform volume, const varying vec3f &coordinates);

        //! Tri-linear interpolation at the given sample location in the volume.
        varying float (*uniform computeSample)(void *uniform volume, const varying vec3f &coordinates);
      
        //! Tri-linear interpolation at each sample location in an array, 'coordinates' and 'results' arrays must be 'count' elements in size.
        void (*uniform computeSamples)(void *uniform volume, const varying vec3f *uniform coordinates, const varying int count, varying float *uniform results);

    };

#endif // VOLUME_IH

